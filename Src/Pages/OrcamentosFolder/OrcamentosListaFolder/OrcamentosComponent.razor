@inherits BaseCrudViewPageComponent<Orcamento, OrcamentoView>

@using Dtos
@using MaterialeShop.Admin.Src.Shared.Components

@inject UsuarioPerfilService UsuarioPerfilService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar

<ListaViewCard ListaId="ListaId"></ListaViewCard>
<br>
<br>

<MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors" ValidationDelay="0">
    <MudCard Outlined="true">
        <MudCardHeader>
            <CardHeaderContent>
                <h4>Novo pedido de orçamento</h4>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            <div class='d-flex flex-wrap justify-center align-start gap-1' style='width: 100% !important' WRAP>

                @if (_LojaList is not null)
                {
                    <MudSelect T="int" Label="Loja" Variant="Variant.Outlined" Placeholder="Selecione a loja"
                    Text="Selecione a loja" @bind-Value="model!.LojaId"
                    For="@(() => model.LojaId)" Required="true"
                    Validation="mudSelectValidation">
                        @foreach (var item in _LojaList)
                        {
                            <MudSelectItem Value="@item.Id">@item.Nome</MudSelectItem>
                        }
                    </MudSelect>
                }
                else
                {
                    <MudSelect T="string" Label="Loja" Variant="Variant.Outlined" Text="Carregando lojas" Required="true">
                        <MudSelectItem T="string"> Carregando lojas </MudSelectItem>
                    </MudSelect>
                }

                <MudDatePicker Label="Solicitação data" Variant="Variant.Outlined" @bind-Date="model.SolicitacaoData" 
                    Clearable Editable="true" Mask="@(new DateMask("dd/MM/yyyy"))" DateFormat="dd/MM/yyyy" />
                
                <MudTimePicker Label="Solicitação hora" Variant="Variant.Outlined" @bind-Time="model.SolicitacaoHora" 
                    Clearable Editable="true" /> 
                     @* nao funcionou Mask="@(new DateMask("HH:mm:ss"))" TimeFormat="HH:mm:ss" *@

                <MudDatePicker Label="RecebidoData" Variant="Variant.Outlined" @bind-Date="model.RecebidoData" 
                    Clearable Editable="true" Mask="@(new DateMask("dd/MM/yyyy"))" DateFormat="dd/MM/yyyy" />

                <MudTextField Label="EntregaPreco" @bind-Value="model.EntregaPreco" For="@(() => model.EntregaPreco)"
                        Immediate="true" Variant="Variant.Outlined"/>

                <MudTextField Label="EntregaPrazo" @bind-Value="model.EntregaPrazo" For="@(() => model.EntregaPrazo)"
                        Immediate="true" Variant="Variant.Outlined"/>

                <MudTextField Label="DescontoNoTotal" @bind-Value="model.DescontoNoTotal" For="@(() => model.DescontoNoTotal)"
                        Immediate="true" Variant="Variant.Outlined"/>

                <MudTextField Label="OrcamentoAnexo" @bind-Value="model.OrcamentoAnexo" For="@(() => model.OrcamentoAnexo)"
                        Immediate="true" Variant="Variant.Outlined"/>

                <MudTextField Label="CodigoLoja" @bind-Value="model.CodigoLoja" For="@(() => model.CodigoLoja)"
                        Immediate="true" Variant="Variant.Outlined"/>

            </div>
        </MudCardContent>
        <MudCardActions>
            <div class='d-flex flex-row justify-end align-center gap-2' style='width: 100% !important' LINHA>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="OnClickCancel">
                    <MudText>Cancelar</MudText>
                </MudButton>

                <MudButton Variant="Variant.Filled" Color="Color.Primary" 
                    OnClick="OnClickSave" Disabled="@(form.IsValid ? false : true)">
                    @if (_processingNewItem)
                    {
                        <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                        <MudText Class="ms-2">Processando</MudText>
                    }
                    else
                    {
                        <MudText><strong>Salvar</strong></MudText>
                    }
                </MudButton>
            </div>
        </MudCardActions>

    </MudCard>
</MudForm>

<br>
<MudText Typo="Typo.h6">Pedidos de orçamento das lojas selecionadas.</MudText>
<br>


@if (_tableListFiltered == null)
{
    <LoadingTable />
}
else
{
    <MudTable Items="@_tableListFiltered" @ref="table" Elevation="1" Bordered="false" Striped="true" Hover="true"
    T="OrcamentoView" OnRowClick="RowClickEvent">

        <ToolBarContent>
            <MudTextField T="string" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search"
            IconSize="MudBlazor.Size.Medium" Class="mt-0" Clearable="true" Immediate="true"
            ValueChanged="@(s=>OnValueChangedSearch(s))" Placeholder="Pesquisa" />
        </ToolBarContent>

        <HeaderContent>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<OrcamentoView, object>(x=>x.LojaNome)">
                    Nome
                </MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<OrcamentoView, object>(x=>x.RecebidoData)">
                    RecebidoData
                </MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<OrcamentoView, object>(x=>x.CodigoLoja)">
                    CodigoLoja
                </MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<OrcamentoView, object>(x=>x.SolicitacaoData)">
                    SolicitacaoData
                </MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<OrcamentoView, object>(x=>x.SolicitacaoHora)">
                    SolicitacaoHora
                </MudTableSortLabel>
            </MudTh>
            <MudTh>
                Ações
            </MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Nome">@context?.LojaNome</MudTd>
            <MudTd DataLabel="RecebidoData">@context?.RecebidoData</MudTd>
            <MudTd DataLabel="CodigoLoja">@context?.CodigoLoja</MudTd>
            <MudTd DataLabel="SolicitacaoData">@context?.SolicitacaoData</MudTd>
            <MudTd DataLabel="SolicitacaoHora">@context?.SolicitacaoHora</MudTd>
            <MudTd DataLabel="Ação">
                <MudIconButton Icon="@Icons.Material.Filled.Edit" aria-label="edit" Size="MudBlazor.Size.Small"
                OnClick="@(async (e) => await OnClickEdit(context) )" />
                <MudIconButton Icon="@Icons.Material.Filled.Delete" aria-label="delete" Size="MudBlazor.Size.Small"
                OnClick="@(async (e) => await OnClickDelete(context) )" />
            </MudTd>
        </RowTemplate>

        <NoRecordsContent>
            <br>
            <h4 style="text-align: center !important;">Você não tem nenhum item nesta página.</h4>
            <br>
        </NoRecordsContent>

        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{50, 100}" />
        </PagerContent>
    </MudTable>
}