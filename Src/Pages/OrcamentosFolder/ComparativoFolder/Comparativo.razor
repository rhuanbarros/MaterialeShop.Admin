@page "/comparativo/{ListaId:int}"

@inherits BasePageComponent

@using Dtos
@using MaterialeShop.Admin.Src.Shared.Components

<PageTitle>MaterialeShop - Orçamentos</PageTitle>

<AppBarCustom />

<div class="px-2 px-sm-8 px-md-16 pt-6 pt-sm-8 pt-md-8">

    <MudText Typo="Typo.h5">Comparativo de orçamentos</MudText>
    <br>

    @if( (_ListaItemList == null || !_ListaItemList.Any()) && 
            (_OrcamentoViewList == null || !_OrcamentoViewList.Any()) &&
            (_OrcamentoItemList == null || !_OrcamentoItemList.Any()) )
    {
        <MudSkeleton />
    } else
    {
        <MudSimpleTable Hover="true" Bordered="true" Striped="true" Style="overflow-x: auto;" Outlined="false" Class="espaco-borda">
            <thead>

                <tr>
                    <th></th>
                    <th></th>
                    <th></th>
                    @foreach (OrcamentoView item in _OrcamentoViewList)
                    {
                        <th Class="borda-remove"></th>
                        <th colspan="3" Class="borda-todas"><MudText Align="Align.Center"><b>@item.LojaNome</b></MudText></th>
                    }
                </tr>
                
                <tr>
                    <th>#</th>
                    <th>Quantidade solicitada</th>
                    <th Class="borda-right">Produto</th>

                    @foreach (OrcamentoView item in _OrcamentoViewList)
                    {
                        <th Class="borda-remove"></th>
                        <th Class="borda-left">Quantidade ofertada</th>
                        <th>Valor unitário</th>
                        <th Class="borda-right">Valor total</th>
                    }
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < quantidade_linhas; i++)
                {
                    ListaItem item = new();
                    bool temMais = _ListaItemListEnumerator.MoveNext();
                    if(temMais)
                    {
                        item = _ListaItemListEnumerator.Current;

                        Console.WriteLine("item.Descricao");
                        Console.WriteLine(item.Descricao);
                        Console.WriteLine("item.Quantidade");
                        Console.WriteLine(item.Quantidade);

                        @* InvokeAsync(StateHasChanged); *@
                    
                        <tr>
                            <td><b>@(i+1)</b></td>

                            @* <td><MudText>@(item?.Quantidade.ToString())</MudText></td> *@
                            <td><MudText>@(item != null ? item?.Descricao != null ? item.Descricao : "nulo desc" : "nulo")</MudText></td>

                            <td>x</td>
                            
                            <td Class="borda-remove"></td>
                            <td>x</td>
                            <td>x</td>
                            <td>x</td>
                            <td Class="borda-remove"></td>
                            <td>x</td>
                            <td>x</td>
                            <td>x</td>
                        </tr>                    
                    }
                    
                }

            </tbody>
        </MudSimpleTable>
    }

    <br>
    <br>
    <br>
    <br>
    <br>

</div>

<style>
    .borda-todas {
        border: 1px solid var(--mud-palette-table-lines);
    }
    
    .borda-left {
        border-left: 1px solid var(--mud-palette-table-lines);
    }
    
    .borda-right {
        border-right: 1px solid var(--mud-palette-table-lines);
    }
    
    .borda-remove {
        border-top: 0px !important;
        border-bottom: 0px !important;
    }

</style>