@page "/comparativo/{ListaId:int}"

@inherits BasePageComponent

@using Dtos
@using MaterialeShop.Admin.Src.Shared.Components

@inject NavigationManager NavigationManager

<PageTitle>MaterialeShop - Orçamentos</PageTitle>

<AppBarCustom />

<div class="px-2 px-sm-8 px-md-16 pt-6 pt-sm-8 pt-md-8">

    <MudText Typo="Typo.h5">Comparativo de orçamentos</MudText>
    
    <br>

    <div class='d-flex flex-wrap justify-start align-center gap-4' style='width: 100% !important' WRAP>
        @if(_ListaView is null)
        {
            <MudSkeleton></MudSkeleton>
        } else
        {
            <MudCard Elevation=3>
                <MudCardHeader Class="pb-0">
                    <CardHeaderContent>
                        <div class='d-flex flex-row justify-start align-center gap-1' style='width: 100% !important' LINHA>
                            <MudIcon Icon="@Icons.Material.Filled.List" /><h4> Lista de compras </h4>
                        </div>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <p>Endereço: @Endereco</p>
                    <p>Data de criação da lista de compras: @_ListaView?.CreatedAt</p>
                    <p>Quantidade de orçamentos obetidos: @(_OrcamentoViewList?.Count())</p>
                </MudCardContent>
            </MudCard>
        }
        <MudCard Elevation=3>
            <MudCardHeader Class="pb-0">
                <CardHeaderContent>
                    <div class='d-flex flex-row justify-start align-center gap-1' style='width: 100% !important' LINHA>
                        <MudIcon Icon="@Icons.Material.Filled.PriceCheck" Color="Color.Success" /><h4> Preço total do carrinho mais econômico</h4>
                        <MudTooltip Text="O preço total do carrinho mais econômico considera a seleção da oferta de preço unitário mais barato para cada item solicitado, somando, também, os valores de frete aplicáveis.">
                            <MudIconButton Icon="@Icons.Material.Filled.Info" Style="padding: 4px" Size="Size.Small"/>
                        </MudTooltip>
                    </div>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>

                <div class='d-flex flex-column justify-start align-center gap-1' style='width: 100% !important' COLUNA>
                    <MudText Text Typo="Typo.h6" Align="Align.Center">
                        @PrecoTotalCarrinhosMaisEconomico                        
                    </MudText>
                    
                    <MudButtonWithLoading titulo="Montar carrinho mais econômico"
                        onClickEventHandler="@(async () => await OnClickMontarCarrinhoEconomico() )"/>
                </div>                
                
            </MudCardContent>
        </MudCard>
        
        <MudCard Elevation=3>
            <MudCardHeader Class="pb-0">
                <CardHeaderContent>
                    <div class='d-flex flex-row justify-start align-center gap-1' style='width: 100% !important' LINHA>
                        <MudIcon Icon="@Icons.Material.Filled.PriceCheck" Color="Color.Success" /><h4> Economia em relação ao orçamento mais caro</h4>
                    </div>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>

                <div class='d-flex flex-column justify-start align-center gap-1' style='width: 100% !important' COLUNA>
                    <MudText Text Typo="Typo.h6" Align="Align.Center">
                        @EconomiaEmRelacaoAoOrcamentoMaisCaro
                    </MudText>
                    <MudText Text Typo="Typo.h6" Align="Align.Center">
                        @EconomiaEmRelacaoAoOrcamentoMaisCaroPorcentagem
                    </MudText>
                </div>                
                
            </MudCardContent>
        </MudCard>
    </div>

    
    <br>
    <MudButton Variant="Variant.Filled" Color="MudBlazor.Color.Primary" 
        OnClick='@(async (e) => NavigationManager.NavigateTo( Rotas.CarrinhosItensLista(ListaId) ) )' >
        Ver carrinhos de compras desta lista
    </MudButton>
    <br>
    <br>

    @if( (_ListaItemList == null || !_ListaItemList.Any()) && 
            (_OrcamentoViewList == null || !_OrcamentoViewList.Any()) &&
            (_OrcamentoItemListList == null || !_OrcamentoItemListList.Any()) )
    {
        <MudSkeleton />
    } else
    {
        <MudSimpleTable Hover="true" Bordered="true" Striped="true" Style="overflow-x: auto;" Outlined="false" Class="espaco-borda">
            <thead>

                <tr>
                    <th Class="borda-remove"></th>
                    <th Class="borda-remove"></th>
                    <th Class="borda-remove"></th>
                    @foreach (OrcamentoView item in _OrcamentoViewList)
                    {
                        <th Class="borda-remove"></th>
                        <th colspan="3" Class="borda-remove">
                            <MudText Align="Align.Center" Typo="Typo.subtitle2">
                                @if(maisBarato == item.OrcamentoId)
                                {
                                    <MudChip Icon="@Icons.Material.Filled.PriceCheck" Label="true" Class="marcador-mais-barato">Mais barato</MudChip>
                                    <span>&nbsp;</span>
                                }
                                @if(maisQuantidadeItens == item.OrcamentoId)
                                {
                                    <MudChip Icon="@Icons.Material.Filled.PlaylistAddCheck" Label="true" Class="marcador-mais-completo">Mais completo</MudChip>
                                    <span>&nbsp;</span>
                                }
                            </MudText>
                        </th>
                    }
                </tr>

                <tr>
                    <th></th>
                    <th></th>
                    <th></th>
                    @foreach (OrcamentoView item in _OrcamentoViewList)
                    {
                        <th Class="borda-remove"></th>
                        <th colspan="3" Class="borda-todas"><MudText Align="Align.Center"><b>@item.LojaNome</b></MudText></th>
                    }
                </tr>
                
                <tr>
                    <th><MudText Align="Align.Center">#</MudText></th>
                    <th><MudText Align="Align.Center">Quantidade <br>solicitada</MudText></th>
                    <th Class="borda-right"><MudText Align="Align.Center">Produto</MudText></th>

                    @foreach (OrcamentoView item in _OrcamentoViewList)
                    {
                        <th Class="borda-remove"></th>
                        <th Class="borda-left"><MudText Align="Align.Center">Quantidade <br>ofertada</MudText></th>
                        <th><MudText Align="Align.Center">Preço <br>unitário</MudText></th>
                        <th Class="borda-right"><MudText Align="Align.Center">Preço <br>total</MudText></th>
                    }
                </tr>
            </thead>
            <tbody>
                @if(tabelaComparativa is null)
                {
                    <MudSkeleton></MudSkeleton>
                } else
                {
                    @* int aux_coluna; *@
                    int numero_ordem_itens=0;
                    @foreach (var linha in tabelaComparativa)
                    {
                        int aux_coluna=2; //começa em 2 pq a primeira coluna eh o numero de ordem dos itens e eh inserida antes dos foreach
                        numero_ordem_itens++;
                        <tr>
                            <td class="center-text">@numero_ordem_itens</td>
                            @foreach (var coluna in linha)
                            {
                                switch (coluna.TipoColuna)
                                {
                                    case TipoColuna.ListaItem:
                                        ListaItem listaItem_ = coluna.Conteudo as ListaItem;
                                        <td><MudText Align="Align.Center" Typo="Typo.body2">@listaItem_?.Quantidade.ToString()</MudText></td>
                                        <td><MudText Align="Align.Left" Typo="Typo.body2">@listaItem_?.Descricao</MudText></td>
                                        break;
                                    case TipoColuna.ListaItemVazio:
                                        <td><MudText Align="Align.Center" Typo="Typo.body2"></MudText></td>
                                        <td><MudText Align="Align.Left" Typo="Typo.body2"></MudText></td>
                                        break;
                                    case TipoColuna.OrcamentoItem:
                                        OrcamentoItemView orcamentoItem_ = coluna.Conteudo as OrcamentoItemView;
                                        // coluna de separação
                                        <td Class="borda-remove"></td>
                                        <td><MudText Align="Align.Center" Typo="Typo.body2">@orcamentoItem_?.OrcamentoItem_Quantidade</MudText></td>

                                        <td>
                                            <div class='d-flex flex-row justify-space-between align-center gap-1' style='width: 100% !important' LINHA>
                                                <MudTooltip Style="display: inline;" >
                                                    <ChildContent>
                                                        <MudIconButton Icon="@Icons.Material.Filled.Add" Style="padding: 4px" OnClick="@( e => AddToCarrinhoAsync(orcamentoItem_) )"/>
                                                    </ChildContent>
                                                    <TooltipContent>
                                                        <MudText Typo="Typo.h6" Align="Align.Left">Item ofertado: @orcamentoItem_?.OrcamentoItem_Descricao</MudText>
                                                        <MudText Typo="Typo.body2" Align="Align.Left">Quantidade ofertada: @orcamentoItem_?.OrcamentoItem_Quantidade</MudText>
                                                        <MudText Typo="Typo.body2" Align="Align.Left">Preço unitário: @( "R$" + String.Format("{0:0.00}", orcamentoItem_?.Preco) )</MudText>
                                                        <MudText Typo="Typo.body2" Align="Align.Left">Preço total: @( "R$" + String.Format("{0:0.00}", ( orcamentoItem_?.OrcamentoItem_Quantidade ?? orcamentoItem_?.ListaItem_Quantidade ?? 1 ) * orcamentoItem_?.Preco) )</MudText>
                                                        <MudText Typo="Typo.body2" Align="Align.Left">Observações: @orcamentoItem_?.Observacao</MudText>
                                                    </TooltipContent>
                                                </MudTooltip>

                                                <span>
                                                    <MudText Align="Align.Right" Typo="Typo.body2">@( "R$" + String.Format("{0:0.00}", orcamentoItem_?.Preco) )</MudText>
                                                </span>
                                            </div>
                                        </td>

                                        @* <td><MudText Align="Align.Right" Typo="Typo.body2">@( "R$" + String.Format("{0:0.00}", orcamentoItem_?.Preco) )</MudText></td> *@

                                        <td><MudText Align="Align.Right" Typo="Typo.body2">@( "R$" + String.Format("{0:0.00}", ( orcamentoItem_?.OrcamentoItem_Quantidade ?? orcamentoItem_?.ListaItem_Quantidade ?? 1 ) * orcamentoItem_?.Preco) )</MudText></td>
                                        break;
                                    case TipoColuna.OrcamentoItemVazio:
                                        <td Class="borda-remove"></td>
                                        <td><MudText Align="Align.Center" Typo="Typo.body2"></MudText></td>
                                        <td><MudText Align="Align.Right" Typo="Typo.body2"></MudText></td>
                                        <td><MudText Align="Align.Right" Typo="Typo.body2"></MudText></td>
                                        break;
                                }
                                aux_coluna++;

                            }
                        </tr>
                    }
                }

                <tr>
                    <td Class="borda-remove-todas"></td>
                    <td Class="borda-remove-todas"></td>
                    <td Class="borda-remove-todas"></td>
                    @foreach (OrcamentoView item in _OrcamentoViewList)
                    {
                        <td Class="borda-remove"></td>
                        <td colspan="2"><MudText Align="Align.Center" Typo="Typo.body2">Prazo de entrega</MudText></td>
                        <td><MudText Align="Align.Center" Typo="Typo.body2">@item.EntregaPrazo</MudText></td>
                    }
                </tr>

                <tr>
                    <td Class="borda-remove-todas"></td>
                    <td Class="borda-remove-todas"></td>
                    <td Class="borda-remove-todas"></td>
                    @foreach (OrcamentoView item in _OrcamentoViewList)
                    {
                        <td Class="borda-remove"></td>
                        <td colspan="2"><MudText Align="Align.Center" Typo="Typo.body2">Taxa de entrega</MudText></td>
                        <td>
                            @if(item?.EntregaPreco is null)
                            {
                                <MudText Align="Align.Right" Typo="Typo.body2">Não informada.</MudText>
                            }
                            else
                            {
                                <MudText Align="Align.Right" Typo="Typo.body2">@("R$"+String.Format("{0:0.00}", item.EntregaPreco))</MudText>
                            }
                        </td>
                    }
                </tr>

                <tr>
                    <td Class="borda-remove-todas"></td>
                    <td Class="borda-remove-todas"></td>
                    <td Class="borda-remove-todas"></td>
                    @foreach (OrcamentoView item in _OrcamentoViewList)
                    {
                        <td Class="borda-remove"></td>
                        <td colspan="2"><MudText Align="Align.Center" Typo="Typo.body2"><b>Total sem preço de entrega</b></MudText></td>
                        <td><MudText Align="Align.Right" Typo="Typo.body2"><b>@("R$"+String.Format("{0:0.00}", item.PrecoTotalSemEntrega))</b></MudText></td>
                    }
                </tr>

                <tr>
                    <td Class="borda-remove-todas"></td>
                    <td Class="borda-remove-todas"></td>
                    <td Class="borda-remove-todas"></td>
                    @foreach (OrcamentoView item in _OrcamentoViewList)
                    {
                        <td Class="borda-remove"></td>
                        <td colspan="2"><MudText Align="Align.Center" Typo="Typo.body2"><b>Total com preço de entrega</b></MudText></td>
                        <td><MudText Align="Align.Right" Typo="Typo.body2"><b>@("R$"+String.Format("{0:0.00}", item.PrecoTotalComEntrega))</b></MudText></td>
                    }
                </tr>
                
                <tr>
                    <td Class="borda-remove-todas">&ensp;</td>
                    <td Class="borda-remove-todas">&ensp;</td>
                    <td Class="borda-remove-todas">&ensp;</td>
                    @foreach (OrcamentoView item in _OrcamentoViewList)
                    {
                        <td Class="borda-remove-todas">&ensp;</td>
                        <td Class="borda-remove-todas">&ensp;</td>
                        <td Class="borda-remove-todas">&ensp;</td>                        
                    }
                </tr>
                
                <tr>
                    <td Class="borda-remove-todas"></td>
                    <td Class="borda-remove-todas"></td>
                    <td Class="borda-remove-todas"></td>
                    @foreach (OrcamentoView item in _OrcamentoViewList)
                    {
                        <td Class="borda-remove-todas"></td>
                        <td Class="borda-remove-todas" colspan="3">
                            <MudText Align="Align.Center">

                                <MudButtonWithLoading 
                                    titulo="Adicionar todos os itens ao carrinho"
                                    onClickEventHandler="@(async () => await OnClickAdicionarAoCarrinhoTodoOrcamento(item) )"/>

                                <br>

                            </MudText>
                        </td>
                    }
                </tr>

            </tbody>
        </MudSimpleTable>
    }

    <br>
    <br>
    <br>
    <br>
    <br>

</div>

<style>
    .borda-todas {
        border: 1px solid var(--mud-palette-table-lines);
    }
    
    .borda-left {
        border-left: 1px solid var(--mud-palette-table-lines);
    }
    
    .borda-right {
        border-right: 1px solid var(--mud-palette-table-lines);
    }
    
    .borda-remove {
        border-top: 0px !important;
        border-bottom: 0px !important;
    }
    
    .borda-remove-todas {
        border: 0px !important;
    }

    .marcador-mais-barato {
        background-color: green;
        color: white;
    }
    
    .marcador-mais-completo {
        background-color: purple;
        color: white;
    }

    td, th {
        padding: 8px !important;
    }

    .center-text {
        text-align: center !important;
    }

</style>