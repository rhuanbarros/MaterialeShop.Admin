@page "/lista/{ListaId:int}"

@inherits BaseCrudPageComponent<ListaItem>

@using Dtos
@using MaterialeShop.Admin.Src.Shared.Components

@inject NavigationManager NavigationManager

<PageTitle>MaterialeShop - Lista de compras de @NomeCliente</PageTitle>

<AppBarCustom />

<div class="px-2 px-sm-8 px-md-16 pt-6 pt-sm-8 pt-md-8">

    <Breadcrumbs Items="_items"></Breadcrumbs>

    <MudText Typo="Typo.h5">Lista de compras de @NomeCliente</MudText>

    <br>

    <MudCard Elevation=3>
        <MudCardContent>
            <p>Endereço: @Endereco</p>
        </MudCardContent>
    </MudCard>

    <br>
        <MudButton Variant="Variant.Filled" Color="MudBlazor.Color.Primary" 
            OnClick='@(async (e) => NavigationManager.NavigateTo(Rotas.Selecionar_loja(ListaId)))' >
            Selecionar lojas
        </MudButton>
    <br>    
    <br>
    <MudText Typo="Typo.h6">Adicione itens a lista de compras</MudText>
    <br>


    <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors" ValidationDelay="0">
        <MudCard Outlined="true">
            <MudCardHeader>
                <CardHeaderContent>
                    <h4>Novo item</h4>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <div class='d-flex flex-wrap justify-center align-start gap-1' style='width: 100% !important' WRAP>
                    <MudTextField Label="Descricao" @bind-Value="model.Descricao" For="@(() => model.Descricao)" Required="true"
                        Immediate="true" Variant="Variant.Outlined"/>
                    <MudTextField Label="Quantidade" @bind-Value="model.Quantidade" For="@(() => model.Quantidade)"
                        Immediate="true" Variant="Variant.Outlined"/>
                    <MudTextField Label="Unidade de medida" @bind-Value="model.UnidadeMedida" For="@(() => model.UnidadeMedida)"
                        Immediate="true" Variant="Variant.Outlined"/>
                </div>
            </MudCardContent>
            <MudCardActions>
                <div class='d-flex flex-row justify-end align-center gap-2' style='width: 100% !important' LINHA>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" 
                        OnClick="OnClickCancel">
                            <MudText>Cancelar</MudText>
                    </MudButton>

                    <MudButton Variant="Variant.Filled" Color="Color.Primary"  
                        OnClick="OnClickSave">
                        @if (_processingNewItem)
                        {
                            <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                            <MudText Class="ms-2">Processando</MudText>
                        }
                        else
                        {
                            <MudText><strong>Salvar</strong></MudText>
                        }
                    </MudButton>
                </div>
            </MudCardActions>

        </MudCard>
    </MudForm>

    <br>
    @* <MudText Typo="Typo.h6">Lista de itens na lista de compras</MudText>
    <br> *@


    @if (_tableListFiltered == null)
    {
        <LoadingTable/>
    } else
    {
        <MudTable Items="@_tableListFiltered" @ref="table" Elevation="1" Bordered="false" Striped="true" Hover="true" T="ListaItem">

            <ToolBarContent>
                <MudTextField T="string" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search"
                IconSize="MudBlazor.Size.Medium" Class="mt-0" Clearable="true" Immediate="true"
                ValueChanged="@(s=>OnValueChangedSearch(s))" Placeholder="Pesquisa" />
            </ToolBarContent>

            <HeaderContent>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<ListaItem, object>(x=>x.Descricao)">
                            Descricao
                    </MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<ListaItem, object>(x=>x.Quantidade)">
                        Quantidade
                    </MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<ListaItem, object>(x=>x.UnidadeMedida)">
                        UnidadeMedida
                    </MudTableSortLabel>
                </MudTh>
                <MudTh>
                    Ações
                </MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Descricao">@context?.Descricao</MudTd>
                <MudTd DataLabel="Quantidade">@context?.Quantidade</MudTd>
                <MudTd DataLabel="UnidadeMedida">@context?.UnidadeMedida</MudTd>
                <MudTd DataLabel="Ação">
                    <MudIconButton Icon="@Icons.Material.Filled.Edit" aria-label="edit"
                        Size="MudBlazor.Size.Small"
                        OnClick="@(async (e) => { await OnClickEdit(context.GetCopy()); })"
                        />
                    <MudIconButton Icon="@Icons.Material.Filled.Delete" aria-label="delete" Size="MudBlazor.Size.Small"
                        OnClick="@(async (e) => { await OnClickDelete(context); })" />
                </MudTd>
            </RowTemplate>

            <NoRecordsContent>
                <br>
                <h4 style="text-align: center !important;">Você não tem nenhum item nesta página.</h4>
                <br>
            </NoRecordsContent>

            <PagerContent>
                <MudTablePager PageSizeOptions="new int[]{50, 100}" />
            </PagerContent>
        </MudTable>
    }

    <br>
    <br>
    <br>
    <br>
    <br>

</div>