@page "/lojas"

@inherits BaseCrudPageComponent<Loja>

@using Dtos
@using MaterialeShop.Admin.Src.Shared.Components

<PageTitle>MaterialeShop - Lojas</PageTitle>

<AppBarCustom />

<div class="px-2 px-sm-8 px-md-16 pt-6 pt-sm-8 pt-md-8">

    <MudText Typo="Typo.h5">Lojas</MudText>

    <br>

    <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors" ValidationDelay="0">
        <MudCard Outlined="true">
            <MudCardHeader>
                <CardHeaderContent>
                    <h4>Novo item</h4>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <div class='d-flex flex-wrap justify-center align-center gap-1' style='width: 100% !important' WRAP>
                    <MudTextField Label="Nome" @bind-Value="model.Nome" For="@(() => model.Nome)" Required="true"
                        Immediate="true" Variant="Variant.Outlined"/>
                    <MudTextField Label="Cnpj" @bind-Value="model.Cnpj" For="@(() => model.Cnpj)"
                        Immediate="true" Variant="Variant.Outlined"/>
                    <MudTextField Label="Email" @bind-Value="model.Email" For="@(() => model.Email)"
                        Immediate="true" Variant="Variant.Outlined"/>
                    <MudTextField Label="Telefone" @bind-Value="model.Telefone" For="@(() => model.Telefone)"
                        Immediate="true" Variant="Variant.Outlined"/>
                    <MudTextField Label="Endereco" @bind-Value="model.Endereco" For="@(() => model.Endereco)"
                        Immediate="true" Variant="Variant.Outlined"/>
                    <MudTextField Label="Cidade" @bind-Value="model.Cidade" For="@(() => model.Cidade)"
                        Immediate="true" Variant="Variant.Outlined"/>
                    <MudTextField Label="Estado" @bind-Value="model.Estado" For="@(() => model.Estado)"
                        Immediate="true" Variant="Variant.Outlined"/>
                </div>
            </MudCardContent>
            <MudCardActions>
                <div class='d-flex flex-row justify-end align-center gap-2' style='width: 100% !important' LINHA>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" 
                        OnClick="@( (e) => { model = new(); } )">
                            <MudText>Cancelar</MudText>
                    </MudButton>

                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)" 
                        OnClick="OnClickSave">
                        @if (_processingNewItem)
                        {
                            <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                            <MudText Class="ms-2">Processando</MudText>
                        }
                        else
                        {
                            <MudText><strong>Salvar</strong></MudText>
                        }
                    </MudButton>
                </div>
            </MudCardActions>

        </MudCard>
    </MudForm>

    <br>


    @if (_tableListFiltered == null)
    {
        <LoadingTable/>
    } else
    {
        <MudTable Items="@_tableListFiltered" @ref="table" Elevation="1" Bordered="false" Striped="true" Hover="true" T="Loja">

            <ToolBarContent>
                <MudTextField T="string" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search"
                IconSize="MudBlazor.Size.Medium" Class="mt-0" Clearable="true"
                ValueChanged="@(s=>OnValueChangedSearch(s))" Placeholder="Pesquisa" />
            </ToolBarContent>

            <HeaderContent>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<Loja, object>(x=>x.Nome)">
                            Nome
                    </MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<Loja, object>(x=>x.Cnpj)">
                        Cnpj
                    </MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<Loja, object>(x=>x.Email)">
                        Email
                    </MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<Loja, object>(x=>x.Telefone)">
                        Telefone
                    </MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<Loja, object>(x=>x.Endereco)">
                        Endereco
                    </MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<Loja, object>(x=>x.Cidade)">
                        Cidade
                    </MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<Loja, object>(x=>x.Estado)">
                        Estado
                    </MudTableSortLabel>
                </MudTh>
                <MudTh>
                    Ações
                </MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Nome">@context?.Nome</MudTd>
                <MudTd DataLabel="Cnpj">@context?.Cnpj</MudTd>
                <MudTd DataLabel="Email">@context?.Email</MudTd>
                <MudTd DataLabel="Telefone">@context?.Telefone</MudTd>
                <MudTd DataLabel="Endereco">@context?.Endereco</MudTd>
                <MudTd DataLabel="Cidade">@context?.Cidade</MudTd>
                <MudTd DataLabel="Estado">@context?.Estado</MudTd>
                <MudTd DataLabel="Ação">
                    <MudIconButton Icon="@Icons.Material.Filled.Edit" aria-label="edit"
                        Size="MudBlazor.Size.Small"
                        OnClick="@(async (e) => { await OnClickEdit(context); })"
                        />
                    <MudIconButton Icon="@Icons.Material.Filled.Delete" aria-label="delete" Size="MudBlazor.Size.Small"
                        OnClick="@(async (e) => { await OnClickDelete(context); })" />
                </MudTd>
            </RowTemplate>

            <NoRecordsContent>
                <br>
                <h4 style="text-align: center !important;">Você não tem nenhum item nesta página.</h4>
                <br>
            </NoRecordsContent>

            <PagerContent>
                <MudTablePager PageSizeOptions="new int[]{50, 100}" />
            </PagerContent>
        </MudTable>
    }

    <br>
    <br>
    <br>
    <br>
    <br>

</div>